services:
  postgres:
    image: postgres:15-alpine
    container_name: food-trace-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-123456}
      POSTGRES_DB: ${DB_NAME:-food_trace}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: food-trace-redis
    restart: always
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: ['redis-server', '--save', '20', '1', '--loglevel', 'warning']
    volumes:
      - ./tmp/redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: food-trace-be:latest
    container_name: food-trace-backend
    restart: always
    env_file: .env
    ports:
      - '${PORT:-3000}:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npm run migration:run && node src/main.js"
    healthcheck:
      test:
        ['CMD-SHELL', 'curl -f http://localhost:${PORT:-3000}/health || exit 1']
      interval: 15s
      timeout: 5s
      retries: 5

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    image: food-trace-queue
    container_name: food-trace-queue
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "node src/bull.js"

volumes:
  pgdata:

networks:
  default:
    name: food-trace-network
